% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotReducedDim.R
\name{plotReducedDim}
\alias{plotReducedDim}
\alias{plotDimRed}
\title{plotReducedDim}
\usage{
plotReducedDim(
  spe,
  plot_type = c("UMAP", "PCA"),
  annotate = NULL,
  features = "gene_name",
  assay_name = "counts",
  update_colnames = TRUE,
  palette = NULL,
  point_size = 0.3,
  text_by = NULL,
  text_by_size = 5,
  text_by_color = "black"
)

plotDimRed(...)
}
\arguments{
\item{spe}{(SpatialExperiment) Input data, assumed to be a
\code{SpatialExperiment} or \code{SingleCellExperiment} object.}

\item{plot_type}{(character) Type of reduced dimension plot. Options can be
"UMAP", "PCA", or any self-defined reduced dimension names. Default =
"UMAP".}

\item{annotate}{(character) Name of column in \code{colData} containing
values to annotate spots with colors, e.g. cluster labels (discrete values)
or total UMI counts (continuous values).}

\item{features}{(character) Name of column in \code{rowData} containing
continuous feature to plot. Default = "gene_name".}

\item{assay_name}{(character) Name of \code{assay} containing continuous
feature to plot.}

\item{update_colnames}{(logical) Whether to update column names of
\code{reducedDim} to default values. Default = TRUE.}

\item{point_size}{(numeric) Point size for \code{geom_point()}. Default = 0.3.}

\item{text_by}{(character) Column name of the annotation to apply on top of 
each cluster. Usually should put it the same as `annotate = `. unless you have 
another intended `text_by` column, e.g. with more readable classes or shorter 
strings. Only used for categorical `annotate = `. Default = \code{NULL}.}

\item{text_by_size}{(numerical) Text size hovering over each cluster. Default =
\code{5}.}

\item{text_by_color}{(character) Color string or hex code. Default = \code{"black"}.}

\item{pal}{(character) Color palette for annotation. Options for discrete
labels are "libd_layer_colors", "Okabe-Ito", or a vector of color names or
hex values. For continuous values, provide a vector of length 2 for the low
and high range, e.g. \code{c("gray90", "navy")}. Default =
\code{"libd_layer_colors"}.}
}
\value{
Returns a ggplot object. Additional plot elements can be added as
  ggplot elements (e.g. title, labels, formatting, etc).
}
\description{
Plotting functions for spatially resolved transcriptomics data.
}
\details{
Function to plot spot-based spatially resolved transcriptomics data stored in
a \code{SpatialExperiment} object.

This function generates a plot in reduced dimension coordinates (PCA or
UMAP), along with annotation such as cluster labels or total UMI counts.
}
\examples{
library(STexampleData)
spe <- Visium_humanDLPFC()

# use small subset of data for this example
# for longer examples see our online book OSTA
spe <- spe[, colData(spe)$in_tissue == 1]
set.seed(100)
n <- 200
spe <- spe[, sample(seq_len(ncol(spe)), n)]

# calculate log-transformed normalized counts
library(scran)
set.seed(100)
qclus <- quickCluster(spe)
spe <- computeSumFactors(spe, cluster = qclus)
spe <- logNormCounts(spe)

# identify top highly variable genes (HVGs)
is_mito <- grepl("(^MT-)|(^mt-)", rowData(spe)$gene_name)
spe <- spe[!is_mito, ]
dec <- modelGeneVar(spe)
top_hvgs <- getTopHVGs(dec, prop = 0.1)

# run dimensionality reduction
library(scater)
set.seed(100)
spe <- runPCA(spe, subset_row = top_hvgs)
set.seed(100)
spe <- runUMAP(spe, dimred = "PCA")
colnames(reducedDim(spe, "UMAP")) <- paste0("UMAP", 1:2)

# generate plot
plotReducedDim(spe, type = "UMAP", annotate = "ground_truth")

}
\author{
Lukas M. Weber with modifications by Yixing E. Dong
}
